<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>莫名.堂</title>
  
  <subtitle>虽不能至，心向往之</subtitle>
  <link href="https://zjun.github.io/atom.xml" rel="self"/>
  
  <link href="https://zjun.github.io/"/>
  <updated>2023-11-10T09:46:39.137Z</updated>
  <id>https://zjun.github.io/</id>
  
  <author>
    <name>zJun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring 全局异常处理</title>
    <link href="https://zjun.github.io/2019/08/b3d504d77f20.html"/>
    <id>https://zjun.github.io/2019/08/b3d504d77f20.html</id>
    <published>2019-08-10T14:50:51.000Z</published>
    <updated>2023-11-10T09:46:39.137Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;SpringBoot中有一个&lt;code&gt;ControllerAdvice&lt;/code&gt;的注解，使用该注解表示开启了全局异常的捕获，我们只需在自定义一个方法使用&lt;code&gt;ExceptionHandler&lt;/code&gt;注解然后定义捕获异常的类型即可对这些捕获的异常进行统一的处</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spring" scheme="https://zjun.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring中AOP的简单使用</title>
    <link href="https://zjun.github.io/2019/05/9e8623f096b1.html"/>
    <id>https://zjun.github.io/2019/05/9e8623f096b1.html</id>
    <published>2019-05-20T08:40:52.000Z</published>
    <updated>2023-11-10T09:43:51.754Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是AOP&quot;&gt;&lt;a href=&quot;#什么是AOP&quot; class=&quot;headerlink&quot; title=&quot;什么是AOP&quot;&gt;&lt;/a&gt;什么是AOP&lt;/h1&gt;&lt;p&gt;AOP （&lt;a class=&quot;link&quot;   href=&quot;https://so.csdn.net/so/se</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spring" scheme="https://zjun.github.io/tags/Spring/"/>
    
    <category term="AOP" scheme="https://zjun.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>创建单例模式的几种方式</title>
    <link href="https://zjun.github.io/2015/11/ab4e9650eab3.html"/>
    <id>https://zjun.github.io/2015/11/ab4e9650eab3.html</id>
    <published>2015-11-20T13:11:51.000Z</published>
    <updated>2023-11-21T09:17:40.591Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;单例模式可能是最常用到的设计模式了，但是想要正确的使用单例模式却并不简单。&lt;br&gt;我们先从最简单最常用的方式开始：&lt;/p&gt;
&lt;h1 id=&quot;懒汉式&quot;&gt;&lt;a href=&quot;#懒汉式&quot; class=&quot;headerlink&quot; title=&quot;懒汉式&quot;&gt;&lt;/a&gt;懒汉式&lt;/h1&gt;&lt;div</summary>
      
    
    
    
    <category term="架构设计" scheme="https://zjun.github.io/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="设计模式" scheme="https://zjun.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记7:并发</title>
    <link href="https://zjun.github.io/2014/02/d65ff11c3013.html"/>
    <id>https://zjun.github.io/2014/02/d65ff11c3013.html</id>
    <published>2014-02-08T13:06:19.000Z</published>
    <updated>2023-11-30T07:30:53.360Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;Golang 给人印象最深刻的一个特性就是：从语言层面支持并行，而且实现起来相当简单。&lt;/p&gt;
&lt;h2 id=&quot;goroutine&quot;&gt;&lt;a href=&quot;#goroutine&quot; class=&quot;headerlink&quot; title=&quot;goroutine&quot;&gt;&lt;/a&gt;goroutin</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记6：Go数据结构</title>
    <link href="https://zjun.github.io/2014/01/27185f4f024e.html"/>
    <id>https://zjun.github.io/2014/01/27185f4f024e.html</id>
    <published>2014-01-22T13:06:19.000Z</published>
    <updated>2023-11-30T07:30:53.360Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;结构与指针&quot;&gt;&lt;a href=&quot;#结构与指针&quot; class=&quot;headerlink&quot; title=&quot;结构与指针&quot;&gt;&lt;/a&gt;结构与指针&lt;/h2&gt;&lt;p&gt;定义一个叫Point的简单的结构类型，意味着内存里是两个相邻的int。  &lt;/p&gt;
&lt;div class=&quot;high</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>在Sublime Text2中开发Golang</title>
    <link href="https://zjun.github.io/2014/01/759bcd250fb1.html"/>
    <id>https://zjun.github.io/2014/01/759bcd250fb1.html</id>
    <published>2014-01-16T13:06:19.000Z</published>
    <updated>2023-11-30T07:29:33.060Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;Sublime Text 2 是一个可定制程度相当高的轻量级编辑器,具有丰富的第三方插件，关键是可以无限期的免费使用。下面就介绍通过安装几种插件，将Sublime Text 2定制成为一款相当好用的Golang IDE。  &lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记5：访问MySQL数据库</title>
    <link href="https://zjun.github.io/2014/01/f9928eb01a4c.html"/>
    <id>https://zjun.github.io/2014/01/f9928eb01a4c.html</id>
    <published>2014-01-03T13:06:19.000Z</published>
    <updated>2023-11-30T07:28:20.931Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装驱动&quot;&gt;&lt;a href=&quot;#安装驱动&quot; class=&quot;headerlink&quot; title=&quot;安装驱动&quot;&gt;&lt;/a&gt;安装驱动&lt;/h2&gt;&lt;p&gt;MySQL驱动： &lt;a class=&quot;link&quot;   href=&quot;https://github.com/go-sql-dri</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记4：接口</title>
    <link href="https://zjun.github.io/2013/12/745ed4880698.html"/>
    <id>https://zjun.github.io/2013/12/745ed4880698.html</id>
    <published>2013-12-30T13:06:19.000Z</published>
    <updated>2023-11-30T07:27:36.458Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是接口-interface&quot;&gt;&lt;a href=&quot;#什么是接口-interface&quot; class=&quot;headerlink&quot; title=&quot;什么是接口(interface)&quot;&gt;&lt;/a&gt;什么是接口(interface)&lt;/h2&gt;&lt;p&gt;Golang中的interfac</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记3：面向对象</title>
    <link href="https://zjun.github.io/2013/12/5c556b8a284e.html"/>
    <id>https://zjun.github.io/2013/12/5c556b8a284e.html</id>
    <published>2013-12-19T13:06:19.000Z</published>
    <updated>2023-11-30T07:26:05.611Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;Go是一个面向对象的语言，但是不同于Java，C++中略显复杂的面向对象思想，Golang 则将 OOP 思想做了极大的简化，只留下了最核心的特征：你可以给任何类型（包括内置类型）“增加”新方法。而在实现某个接口时，&lt;strong&gt;只需要实现该接口要求的所有方法即可&lt;/st</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 实现 REST service</title>
    <link href="https://zjun.github.io/2013/12/8f7583c33c2f.html"/>
    <id>https://zjun.github.io/2013/12/8f7583c33c2f.html</id>
    <published>2013-12-04T13:06:19.000Z</published>
    <updated>2023-11-30T07:21:59.022Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web-xml&quot;&gt;&lt;a href=&quot;#web-xml&quot; class=&quot;headerlink&quot; title=&quot;web.xml&quot;&gt;&lt;/a&gt;web.xml&lt;/h2&gt;&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Xml&quot;&gt;&lt;figu</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spring" scheme="https://zjun.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>使用Spring Data JPA 简化持久层的开发</title>
    <link href="https://zjun.github.io/2013/12/593d9ddfa858.html"/>
    <id>https://zjun.github.io/2013/12/593d9ddfa858.html</id>
    <published>2013-12-03T13:06:19.000Z</published>
    <updated>2023-11-10T09:42:46.021Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近看到&lt;a class=&quot;link&quot;   href=&quot;http://www.springside.org.cn/&quot; &gt;SpringSide &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;最新版的&lt;a class=&quot;link&quot;   href=&quot;https://github.com/springside/springside4/wiki/Design&quot; &gt;技术选型 &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;中提到了&lt;a class=&quot;link&quot;   href=&quot;http://www.springsource.org/spring-data/jpa&quot; &gt;Spring Data JPA &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;,号称只需要实现接口就可以实现大部分操作。真有怎么神奇？于是Google一番，果然好使，在这里记录一下：&lt;/p&gt;</summary>
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spring" scheme="https://zjun.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记2：基础语法</title>
    <link href="https://zjun.github.io/2013/10/369b270da178.html"/>
    <id>https://zjun.github.io/2013/10/369b270da178.html</id>
    <published>2013-10-27T13:06:19.000Z</published>
    <updated>2023-11-30T07:31:59.409Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用var关键字是Go最基本的定义变量方式，Go把变量类型放在</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go笔记1：环境配置</title>
    <link href="https://zjun.github.io/2013/10/274edbd85c00.html"/>
    <id>https://zjun.github.io/2013/10/274edbd85c00.html</id>
    <published>2013-10-24T13:06:19.000Z</published>
    <updated>2023-11-30T07:16:36.083Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Go-安装&quot;&gt;&lt;a href=&quot;#Go-安装&quot; class=&quot;headerlink&quot; title=&quot;Go 安装&quot;&gt;&lt;/a&gt;Go 安装&lt;/h2&gt;&lt;p&gt;我的环境是Win7，所以这里主要记录在Win7下安装Go的过程：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先到&lt;a clas</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="go" scheme="https://zjun.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>把Raspberry Pi打造成 Web Server</title>
    <link href="https://zjun.github.io/2013/09/59563494bac6.html"/>
    <id>https://zjun.github.io/2013/09/59563494bac6.html</id>
    <published>2013-09-17T13:06:19.000Z</published>
    <updated>2023-11-30T06:22:22.231Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Setup-Raspberry-Pi&quot;&gt;&lt;a href=&quot;#Setup-Raspberry-Pi&quot; class=&quot;headerlink&quot; title=&quot;Setup Raspberry Pi&quot;&gt;&lt;/a&gt;Setup Raspberry Pi&lt;/h2&gt;&lt;h3 id=&quot;安</summary>
      
    
    
    
    <category term="其它" scheme="https://zjun.github.io/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>关于 Java String 内存管理的几个有趣的例子</title>
    <link href="https://zjun.github.io/2013/05/40c1459588ae.html"/>
    <id>https://zjun.github.io/2013/05/40c1459588ae.html</id>
    <published>2013-05-30T13:06:19.000Z</published>
    <updated>2023-11-10T09:42:20.381Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天在 &lt;a class=&quot;link&quot;   href=&quot;http://www.oschina.net/&quot; &gt;OSChina &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt; 上看到一篇有趣的文章：&lt;a class=&quot;link&quot;   href=&quot;http://my.oschina.net/u/551903/blog/134000&quot; &gt;关于String内存分配的深入探讨 &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;,文章通过几个简单的例子，把Java中String的内存管理的方式解释的很清楚，涨了不少姿势，现根据自己的理解做些笔记在这里：&lt;/p&gt;</summary>
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Java" scheme="https://zjun.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Dojo在IE中的那些坑</title>
    <link href="https://zjun.github.io/2013/05/53164b018ef1.html"/>
    <id>https://zjun.github.io/2013/05/53164b018ef1.html</id>
    <published>2013-05-14T09:37:00.000Z</published>
    <updated>2023-11-30T07:14:41.169Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;最近的一个小项目中使用的&lt;a class=&quot;link&quot;   href=&quot;http://dojotoolkit.org/&quot; &gt;dojo &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;作为前台</summary>
      
    
    
    
    <category term="前端开发" scheme="https://zjun.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="dojo" scheme="https://zjun.github.io/tags/dojo/"/>
    
  </entry>
  
  <entry>
    <title>HighCharts 笔记2：通过表格生成Pie Chart</title>
    <link href="https://zjun.github.io/2013/04/ef1007595811.html"/>
    <id>https://zjun.github.io/2013/04/ef1007595811.html</id>
    <published>2013-04-01T07:49:00.000Z</published>
    <updated>2023-11-30T07:10:51.599Z</updated>
    
    
    <summary type="html">&lt;p&gt;接上一篇 &lt;a class=&quot;link&quot;   href=&quot;http://zjun.github.com/2013/03/28/highcharts-json-dataformat/&quot; &gt;HighCharts笔记之: Bar Chart &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，这一篇继续记录在项目中使用 Pie Chart 的情况,只是自己的一点总结和记录，以备日后翻阅。这一次是通过页面上的表格(Table)数据，生成对应的饼图（Pie Chart），具体实现如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Highcharts&lt;/strong&gt; 是一个用纯JavaScript编写的一个图表库, 能够很简单便捷的在web网站或是web应用程序添加有交互性的图表，并且免费提供给个人学习、个人网站和非商业用途使用。目前HighCharts支持的图表类型有曲线图、区域图、柱状图、饼状图、散状点图和综合图表。&lt;br&gt;HighCharts界面美观，由于使用JavaScript编写，所以不需要像Flash和Java那样需要插件才可以运行，而且运行速度快。另外HighCharts还有很好的兼容性，能够完美支持当前大多数浏览器。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://zjun.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>HighCharts笔记之: Bar Chart</title>
    <link href="https://zjun.github.io/2013/03/af0dd2fed41a.html"/>
    <id>https://zjun.github.io/2013/03/af0dd2fed41a.html</id>
    <published>2013-03-28T08:52:00.000Z</published>
    <updated>2023-11-30T07:12:53.683Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;最近需要做一些Web图标，研究了几个开源的第三方工具后，最后决定使用&lt;strong&gt;HighCharts&lt;/strong&gt;开发：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highcharts&lt;/strong&gt; 是一个用纯JavaScript编写的一个图表库, 能够很简单便捷的在web</summary>
      
    
    
    
    <category term="前端开发" scheme="https://zjun.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="HighCharts" scheme="https://zjun.github.io/tags/HighCharts/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程笔记：线程管理</title>
    <link href="https://zjun.github.io/2012/05/db86057c545d.html"/>
    <id>https://zjun.github.io/2012/05/db86057c545d.html</id>
    <published>2012-05-02T08:52:00.000Z</published>
    <updated>2023-11-30T06:22:22.231Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建线程&quot;&gt;&lt;a href=&quot;#创建线程&quot; class=&quot;headerlink&quot; title=&quot;创建线程&quot;&gt;&lt;/a&gt;创建线程&lt;/h2&gt;&lt;p&gt;两种方法：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过直接继承thread类，然后覆盖run()方法;&lt;/li&gt;
&lt;li&gt;构建一个实</summary>
      
    
    
    
    <category term="后端开发" scheme="https://zjun.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="并发编程" scheme="https://zjun.github.io/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Find duplicate records in text file</title>
    <link href="https://zjun.github.io/2012/04/d175cbab2927.html"/>
    <id>https://zjun.github.io/2012/04/d175cbab2927.html</id>
    <published>2012-04-11T08:52:00.000Z</published>
    <updated>2023-11-30T06:22:22.231Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Txt&quot;&gt;&lt;figu</summary>
      
    
    
    
    <category term="其它" scheme="https://zjun.github.io/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
</feed>
